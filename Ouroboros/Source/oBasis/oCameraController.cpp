// Copyright (c) 2014 Antony Arciuolo. See License.txt regarding use.
#include <oBasis/oCameraController.h>

static const char* oAsStringCCFlags(int _CCFlags)
{
	switch (_CCFlags)
	{
		case oCAMERA_CONTROLLER_ROTATING_YAW: return "oCAMERA_CONTROLLER_ROTATING_YAW";
		case oCAMERA_CONTROLLER_ROTATING_PITCH: return "oCAMERA_CONTROLLER_ROTATING_PITCH";
		case oCAMERA_CONTROLLER_ROTATING_ROLL: return "oCAMERA_CONTROLLER_ROTATING_ROLL";
		case oCAMERA_CONTROLLER_ROTATING_AROUND_COI: return "oCAMERA_CONTROLLER_ROTATING_AROUND_COI";
		case oCAMERA_CONTROLLER_TRANSLATING_X: return "oCAMERA_CONTROLLER_TRANSLATING_X";
		case oCAMERA_CONTROLLER_TRANSLATING_Y: return "oCAMERA_CONTROLLER_TRANSLATING_Y";
		case oCAMERA_CONTROLLER_TRANSLATING_Z: return "oCAMERA_CONTROLLER_TRANSLATING_Z";
		case oCAMERA_CONTROLLER_SHOW_POINTER: return "oCAMERA_CONTROLLER_SHOW_POINTER";
		case oCAMERA_CONTROLLER_HIDE_POINTER: return "oCAMERA_CONTROLLER_HIDE_POINTER";
		case oCAMERA_CONTROLLER_LOCK_POINTER: return "oCAMERA_CONTROLLER_LOCK_POINTER";
		case oCAMERA_CONTROLLER_UNLOCK_POINTER: return "oCAMERA_CONTROLLER_UNLOCK_POINTER";
		case oCAMERA_CONTROLLER_SAVE_POINTER_POSITION: return "oCAMERA_CONTROLLER_SAVE_POINTER_POSITION";
		case oCAMERA_CONTROLLER_LOAD_POINTER_POSITION: return "oCAMERA_CONTROLLER_LOAD_POINTER_POSITION";
		oNODEFAULT;
	}
}

char* oCameraControllerParseResponse(char* _StrDestination, size_t _SizeofStrDestination, int _ResponseFlags)
{
	return ouro::strbitmask(_StrDestination, _SizeofStrDestination, _ResponseFlags, "0", oAsStringCCFlags);
}